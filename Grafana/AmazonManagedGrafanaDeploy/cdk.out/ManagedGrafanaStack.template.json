{
  "Resources": {
    "AMGVPC9869460B": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ManagedGrafanaStack/AMG-VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/Resource"
      }
    },
    "AMGVPCPublicSubnet1SubnetF68429C7": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "AMGVPC9869460B"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "ManagedGrafanaStack/AMG-VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PublicSubnet1/Subnet"
      }
    },
    "AMGVPCPublicSubnet1RouteTable7EC2C1FB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AMGVPC9869460B"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ManagedGrafanaStack/AMG-VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PublicSubnet1/RouteTable"
      }
    },
    "AMGVPCPublicSubnet1RouteTableAssociationFCD9C214": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "AMGVPCPublicSubnet1RouteTable7EC2C1FB"
        },
        "SubnetId": {
          "Ref": "AMGVPCPublicSubnet1SubnetF68429C7"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PublicSubnet1/RouteTableAssociation"
      }
    },
    "AMGVPCPublicSubnet1DefaultRoute2629A016": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "AMGVPCPublicSubnet1RouteTable7EC2C1FB"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "AMGVPCIGWE6C748B7"
        }
      },
      "DependsOn": [
        "AMGVPCVPCGW4E0FD1D1"
      ],
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PublicSubnet1/DefaultRoute"
      }
    },
    "AMGVPCPublicSubnet1EIPDF4B28D0": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ManagedGrafanaStack/AMG-VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PublicSubnet1/EIP"
      }
    },
    "AMGVPCPublicSubnet1NATGateway5813684A": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "AMGVPCPublicSubnet1SubnetF68429C7"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "AMGVPCPublicSubnet1EIPDF4B28D0",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ManagedGrafanaStack/AMG-VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PublicSubnet1/NATGateway"
      }
    },
    "AMGVPCPublicSubnet2Subnet179CE4BC": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "AMGVPC9869460B"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "ManagedGrafanaStack/AMG-VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PublicSubnet2/Subnet"
      }
    },
    "AMGVPCPublicSubnet2RouteTableCA18621F": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AMGVPC9869460B"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ManagedGrafanaStack/AMG-VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PublicSubnet2/RouteTable"
      }
    },
    "AMGVPCPublicSubnet2RouteTableAssociation7D9EC375": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "AMGVPCPublicSubnet2RouteTableCA18621F"
        },
        "SubnetId": {
          "Ref": "AMGVPCPublicSubnet2Subnet179CE4BC"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PublicSubnet2/RouteTableAssociation"
      }
    },
    "AMGVPCPublicSubnet2DefaultRouteA2F1809D": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "AMGVPCPublicSubnet2RouteTableCA18621F"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "AMGVPCIGWE6C748B7"
        }
      },
      "DependsOn": [
        "AMGVPCVPCGW4E0FD1D1"
      ],
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PublicSubnet2/DefaultRoute"
      }
    },
    "AMGVPCPublicSubnet2EIPC0DFD5D8": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ManagedGrafanaStack/AMG-VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PublicSubnet2/EIP"
      }
    },
    "AMGVPCPublicSubnet2NATGatewayFBE03EE3": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "AMGVPCPublicSubnet2Subnet179CE4BC"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "AMGVPCPublicSubnet2EIPC0DFD5D8",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ManagedGrafanaStack/AMG-VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PublicSubnet2/NATGateway"
      }
    },
    "AMGVPCPrivateSubnet1SubnetEB26D2BF": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "AMGVPC9869460B"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "ManagedGrafanaStack/AMG-VPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PrivateSubnet1/Subnet"
      }
    },
    "AMGVPCPrivateSubnet1RouteTable903C4046": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AMGVPC9869460B"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ManagedGrafanaStack/AMG-VPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PrivateSubnet1/RouteTable"
      }
    },
    "AMGVPCPrivateSubnet1RouteTableAssociationE1C89B5C": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "AMGVPCPrivateSubnet1RouteTable903C4046"
        },
        "SubnetId": {
          "Ref": "AMGVPCPrivateSubnet1SubnetEB26D2BF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "AMGVPCPrivateSubnet1DefaultRoute6A4B2552": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "AMGVPCPrivateSubnet1RouteTable903C4046"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "AMGVPCPublicSubnet1NATGateway5813684A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PrivateSubnet1/DefaultRoute"
      }
    },
    "AMGVPCPrivateSubnet2Subnet012C5B98": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "AMGVPC9869460B"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "ManagedGrafanaStack/AMG-VPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PrivateSubnet2/Subnet"
      }
    },
    "AMGVPCPrivateSubnet2RouteTable08AEF98D": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AMGVPC9869460B"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ManagedGrafanaStack/AMG-VPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PrivateSubnet2/RouteTable"
      }
    },
    "AMGVPCPrivateSubnet2RouteTableAssociationE6118BDD": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "AMGVPCPrivateSubnet2RouteTable08AEF98D"
        },
        "SubnetId": {
          "Ref": "AMGVPCPrivateSubnet2Subnet012C5B98"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "AMGVPCPrivateSubnet2DefaultRoute02EFD069": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "AMGVPCPrivateSubnet2RouteTable08AEF98D"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "AMGVPCPublicSubnet2NATGatewayFBE03EE3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/PrivateSubnet2/DefaultRoute"
      }
    },
    "AMGVPCIGWE6C748B7": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ManagedGrafanaStack/AMG-VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/IGW"
      }
    },
    "AMGVPCVPCGW4E0FD1D1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "AMGVPC9869460B"
        },
        "InternetGatewayId": {
          "Ref": "AMGVPCIGWE6C748B7"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AMG-VPC/VPCGW"
      }
    },
    "LambdaRoleC149CD95": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iam:PassRole",
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "grafana-lambda-policy"
          }
        ],
        "RoleName": "lambda_role"
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/Lambda-Role/Resource"
      }
    },
    "GrafanaRoleF8413940": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "grafana.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSXrayReadOnlyAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSIoTSiteWiseReadOnlyAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonTimestreamReadOnlyAccess"
              ]
            ]
          }
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "sns:Publish",
                    "aps:ListWorkspaces",
                    "aps:DescribeWorkspace",
                    "aps:QueryMetrics",
                    "aps:GetLabels",
                    "aps:GetSeries",
                    "aps:GetMetricMetadata",
                    "cloudwatch:DescribeAlarmsForMetric",
                    "cloudwatch:DescribeAlarmHistory",
                    "cloudwatch:DescribeAlarms",
                    "cloudwatch:ListMetrics",
                    "cloudwatch:GetMetricStatistics",
                    "cloudwatch:GetMetricData",
                    "logs:DescribeLogGroups",
                    "logs:GetLogGroupFields",
                    "logs:StartQuery",
                    "logs:StopQuery",
                    "logs:GetQueryResults",
                    "logs:GetLogEvents",
                    "ec2:DescribeTags",
                    "ec2:DescribeInstances",
                    "ec2:DescribeRegions",
                    "tag:GetResources",
                    "es:ESHttpGet",
                    "es:DescribeElasticsearchDomains",
                    "es:ListDomainNames"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "grafana-policy"
          }
        ],
        "RoleName": "Grafana-Role"
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/Grafana-Role/Resource"
      }
    },
    "managedgrafanaworkspaceCustomResourcePolicy74187F4D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "grafana:CreateWorkspace",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "managedgrafanaworkspaceCustomResourcePolicy74187F4D",
        "Roles": [
          {
            "Ref": "LambdaRoleC149CD95"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/managed-grafana-workspace/CustomResourcePolicy/Resource"
      }
    },
    "managedgrafanaworkspaceE715D4B6": {
      "Type": "Custom::AWS",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "Fn::Join": [
            "",
            [
              "{\"action\":\"createWorkspace\",\"service\":\"Grafana\",\"parameters\":{\"accountAccessType\":\"CURRENT_ACCOUNT\",\"authenticationProviders\":[\"SSO\"],\"permissionType\":\"SERVICE_MANAGED\",\"workspaceDataSources\":[\"PROMETHEUS\",\"XRAY\",\"TIMESTREAM\",\"SITEWISE\",\"AMAZON_OPENSEARCH_SERVICE\",\"CLOUDWATCH\"],\"workspaceName\":\"fleetwise-demo-workspace\",\"workspaceNotificationDestinations\":[\"SNS\"],\"workspaceRoleArn\":\"",
              {
                "Fn::GetAtt": [
                  "GrafanaRoleF8413940",
                  "Arn"
                ]
              },
              "\"},\"physicalResourceId\":{\"id\":\"AmgCustomResource\"}}"
            ]
          ]
        },
        "InstallLatestAwsSdk": true
      },
      "DependsOn": [
        "managedgrafanaworkspaceCustomResourcePolicy74187F4D"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/managed-grafana-workspace/Resource/Default"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "4a575666d1c2c6412590d2a56f328e040a81ad1ef59aecee31ae9b393d05f659.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaRoleC149CD95",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Runtime": "nodejs12.x",
        "Timeout": 120
      },
      "DependsOn": [
        "LambdaRoleC149CD95"
      ],
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/AWS679f53fac002430cb0da5b7982bd2287/Resource",
        "aws:asset:path": "asset.4a575666d1c2c6412590d2a56f328e040a81ad1ef59aecee31ae9b393d05f659",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "KeycloakSecurityGroup3B33651E": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ManagedGrafanaStack/Keycloak-Security-Group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "AMGVPC9869460B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/Keycloak-Security-Group/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/12RwW6DMBBEvyV34zbJpT0S1Ea5VBZUuSLjbJMtYEf2uggh/r0GAlQ9zdvxaDW2d/yFP29k4yJ1KaMKC95lJFXJgpV3oHa8O98VS770WSRM+KJClflCAw3eSqnxBJ+yqGD1Vy92ziiUhEYv4QHeTmKQD0lHSdDIlgmLPwHXxSdNYAPPganJY4opdL3VoIlloLxFao/W+PvY4a/RM5Q171Iz9RtVmHCXceFEPatkXVxkeAHU1wrI6Hev1Vh6gZCeuWdun0vngByPBwkzP3hVAh2kg56l4Iy3Cpjyjkyd28cc4o1LRm+J/B9Dx5nH3eFTrqHVcJAYfcGpgGjpZvTTnr/y7Xbz7RAj6zVhDTyd9Bdqosuj4AEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "ManagedGrafanaStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}